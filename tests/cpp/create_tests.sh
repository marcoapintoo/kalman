#/bin/zsh

function create_test_sets(){
    #fname=include/SSM/TimeInvariant/SSM.hpp
    fname="$1"
    fnamenoinclude=${fname/include\//}
    ftestname=${fname/.*/.tests}
    echo :: Writing $ftestname
    testcode=$(echo "${${fnamenoinclude}/.*/}" | sed -E "s/\//_/g" | tr a-z A-Z)
    tests=$(grep -Po "(?<=void test_)[\w\d_]+" "$fname" | sed -E 's/(.*)/    EXECUTE_TEST(\1);/')
    echo "     Collecting test methods"
    echo '#pragma once' > "$ftestname"
    echo '' >> "$ftestname"
    #echo "#include \"$fnamenoinclude\"" >> "$ftestname"
    echo "#include <$fnamenoinclude>" >> "$ftestname"
    echo '///////////////////////////////////////////////////////////////////////////////' >> "$ftestname"
    echo '// Tests autogenerated by SSM Project' >> "$ftestname"
    echo '///////////////////////////////////////////////////////////////////////////////' >> "$ftestname"
    echo '' >> "$ftestname"
    echo 'using namespace SSM;' >> "$ftestname"
    echo 'using namespace SSM::TimeInvariant;' >> "$ftestname"
    echo '//using namespace SSM::TimeVariant;' >> "$ftestname"
    echo '' >> "$ftestname"
    echo "void ${testcode}_TEST(){" >> "$ftestname"
    echo "$tests" >> "$ftestname"
    echo "}" >> "$ftestname"
    echo "" >> "$ftestname"
    #grep -Po "(?<=void test_)[\w\d_]+" include/SSM/TimeInvariant/SSM.hpp | sed -E 's/(.*)/EXECUTE_TEST(\1);/'
    echo "     Created $testcode"
}

root_path="include/SSM"
for filename ($root_path/**/*.h*){
    create_test_sets "$filename"
}
